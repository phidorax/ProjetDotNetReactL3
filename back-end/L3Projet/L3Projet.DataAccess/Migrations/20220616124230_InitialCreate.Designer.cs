// <auto-generated />
using System;
using L3Projet.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace L3Projet.DataAccess.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20220616124230_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("L3Projet.Common.Models.Mer", b =>
                {
                    b.Property<Guid>("ID_Mer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MondeID_Monde")
                        .HasColumnType("uuid");

                    b.Property<float>("Nombre_d_ile")
                        .HasColumnType("real");

                    b.HasKey("ID_Mer");

                    b.HasIndex("MondeID_Monde");

                    b.ToTable("Mers");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Monde", b =>
                {
                    b.Property<Guid>("ID_Monde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date_Creation_Monde")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Fin_Monde")
                        .HasColumnType("boolean");

                    b.Property<string>("Nom_Monde")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomMonde");

                    b.Property<string>("Type_Monde")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID_Monde");

                    b.ToTable("Mondes");
                });

            modelBuilder.Entity("L3Projet.Common.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Mer", b =>
                {
                    b.HasOne("L3Projet.Common.Models.Monde", null)
                        .WithMany("Liste_Mers")
                        .HasForeignKey("MondeID_Monde");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Monde", b =>
                {
                    b.Navigation("Liste_Mers");
                });
#pragma warning restore 612, 618
        }
    }
}
