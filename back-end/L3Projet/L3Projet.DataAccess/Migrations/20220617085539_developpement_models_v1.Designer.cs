// <auto-generated />
using System;
using L3Projet.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace L3Projet.DataAccess.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20220617085539_developpement_models_v1")]
    partial class developpement_models_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("L3Projet.Common.Models.Batiment", b =>
                {
                    b.Property<Guid>("ID_Batiment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Cout_Batiment")
                        .HasColumnType("real");

                    b.Property<int>("Niveau_Batiment")
                        .HasColumnType("integer");

                    b.Property<string>("Nom_Batiment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Score_Batiment")
                        .HasColumnType("integer");

                    b.HasKey("ID_Batiment");

                    b.ToTable("Batiments");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Classement", b =>
                {
                    b.Property<float>("Classement_global")
                        .HasColumnType("real");

                    b.Property<float>("Classement_ile")
                        .HasColumnType("real");

                    b.Property<float>("Classement_mer")
                        .HasColumnType("real");

                    b.HasKey("Classement_global");

                    b.ToTable("Classement");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Ile", b =>
                {
                    b.Property<Guid>("ID_Ile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nom_Ile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Score_Ile")
                        .HasColumnType("integer");

                    b.HasKey("ID_Ile");

                    b.ToTable("Iles");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Mer", b =>
                {
                    b.Property<Guid>("ID_Mer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nom_Mer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Nombre_d_ile")
                        .HasColumnType("real");

                    b.Property<int>("Score_Mer")
                        .HasColumnType("integer");

                    b.HasKey("ID_Mer");

                    b.ToTable("Mer");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Monde", b =>
                {
                    b.Property<Guid>("ID_Monde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date_Creation_Monde")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Fin_Monde")
                        .HasColumnType("boolean");

                    b.Property<string>("Nom_Monde")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomMonde");

                    b.Property<string>("Type_Monde")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID_Monde");

                    b.ToTable("Mondes");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Ressources", b =>
                {
                    b.Property<Guid>("ID_Ressource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nom_Ressource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Production_Naturelle_Ressource")
                        .HasColumnType("integer");

                    b.HasKey("ID_Ressource");

                    b.ToTable("Ressources");
                });

            modelBuilder.Entity("L3Projet.Common.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("L3Projet.Common.Models.Village", b =>
                {
                    b.Property<Guid>("ID_Village")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cout_Ressource1_Village")
                        .HasColumnType("integer");

                    b.Property<int>("Cout_Ressource2_Village")
                        .HasColumnType("integer");

                    b.Property<int>("Cout_Ressource3_Village")
                        .HasColumnType("integer");

                    b.Property<string>("Nom_Village")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Score_Village")
                        .HasColumnType("integer");

                    b.HasKey("ID_Village");

                    b.ToTable("Villages");
                });
#pragma warning restore 612, 618
        }
    }
}
